# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  schedule:
    - cron: '0 */6 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      
      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install pandoc      
          sudo apt-get install pandoc-citeproc

      - name: Install dependencies
        run: |
          pip install pyzotero
          pip install --upgrade manubot
          pip install panflute==1.12.5
          
      #- name: Install pipenv
      #  run: |
      #    python -m pip install --upgrade pipenv wheel
      #- id: cache-pipenv
      #  uses: actions/cache@v2.1.7
      #  with:
      #    path: ~/.local/share/virtualenvs
      #    key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}-${{ hashFiles('**/Pipfile') }}
          
      #- name: Install dependencies
      #  if: steps.cache-pipenv.outputs.cache-hit != 'true'
      #  run: |
      #    pipenv install --dev --deploy

      # Runs a single command using the runners shell
      - name: Zotero pull
        env:
          ZOTERO_LIBRARY_ID: ${{ secrets.ZOTERO_LIBRARY_ID }}
          ZOTERO_API_KEY: ${{ secrets.ZOTERO_API_KEY }}
        run: |
          python zotero_pull.py 
            --tag test \
            --lib-id $ZOTERO_LIBRARY_ID \
            --api-key  $ZOTERO_API_KEY \
            --outfile "ref.md" \
            --outfile-header "References"
            


      - name: Pushes test file
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'test.md'
          destination_repo: 'megosato/bibliography'
          destination_folder: '.'
          user_email: 'osatom@uci.edu'
          user_name: 'megosato'
          commit_message: 'Update references 2'
